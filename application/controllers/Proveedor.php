<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Proveedor extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Proveedor_model');
    } 

    /*
     * Listing of proveedor
     */
    function index()
    {
        $data['proveedor'] = $this->Proveedor_model->get_all_proveedor();
        
        $data['_view'] = 'proveedor/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new proveedor
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'proveedor_nombre' => $this->input->post('proveedor_nombre'),
				'proveedor_direccion' => $this->input->post('proveedor_direccion'),
				'proveedor_telefono' => $this->input->post('proveedor_telefono'),
				'proveedor_celular' => $this->input->post('proveedor_celular'),
				'proveedor_email' => $this->input->post('proveedor_email'),
				'proveedor_contacto' => $this->input->post('proveedor_contacto'),
				'proveedor_nit' => $this->input->post('proveedor_nit'),
				'proveedor_razon' => $this->input->post('proveedor_razon'),
				'proveedor_autorizacion' => $this->input->post('proveedor_autorizacion'),
            );
            
            $proveedor_id = $this->Proveedor_model->add_proveedor($params);
            redirect('proveedor/index');
        }
        else
        {            
            $data['_view'] = 'proveedor/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a proveedor
     */
    function edit($proveedor_id)
    {   
        // check if the proveedor exists before trying to edit it
        $data['proveedor'] = $this->Proveedor_model->get_proveedor($proveedor_id);
        
        if(isset($data['proveedor']['proveedor_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'proveedor_nombre' => $this->input->post('proveedor_nombre'),
					'proveedor_direccion' => $this->input->post('proveedor_direccion'),
					'proveedor_telefono' => $this->input->post('proveedor_telefono'),
					'proveedor_celular' => $this->input->post('proveedor_celular'),
					'proveedor_email' => $this->input->post('proveedor_email'),
					'proveedor_contacto' => $this->input->post('proveedor_contacto'),
					'proveedor_nit' => $this->input->post('proveedor_nit'),
					'proveedor_razon' => $this->input->post('proveedor_razon'),
					'proveedor_autorizacion' => $this->input->post('proveedor_autorizacion'),
                );

                $this->Proveedor_model->update_proveedor($proveedor_id,$params);            
                redirect('proveedor/index');
            }
            else
            {
                $data['_view'] = 'proveedor/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The proveedor you are trying to edit does not exist.');
    } 

    /*
     * Deleting proveedor
     */
    function remove($proveedor_id)
    {
        $proveedor = $this->Proveedor_model->get_proveedor($proveedor_id);

        // check if the proveedor exists before trying to delete it
        if(isset($proveedor['proveedor_id']))
        {
            $this->Proveedor_model->delete_proveedor($proveedor_id);
            redirect('proveedor/index');
        }
        else
            show_error('The proveedor you are trying to delete does not exist.');
    }
    
}
