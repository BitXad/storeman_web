<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Ingreso extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Ingreso_model');
    } 

    /*
     * Listing of ingreso
     */
    function index()
    {
        $data['ingreso'] = $this->Ingreso_model->get_all_ingreso();
        
        $data['_view'] = 'ingreso/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new ingreso
     */
    function add()
    {   
        $this->load->library('form_validation');
        $this->form_validation->set_rules('ingreso_numdoc','Num. Doc.','trim|required', array('required' => 'Este Campo no debe ser vacio'));
        if($this->form_validation->run())     
        {
            //se crea como activo
            $estado_id = 1;
            $params = array(
				'estado_id' => $estado_id,
				'unidad_id' => $this->input->post('unidad_id'),
				'pedido_id' => $this->input->post('pedido_id'),
				'usuario_id' => $this->input->post('usuario_id'),
				'ingreso_numdoc' => $this->input->post('ingreso_numdoc'),
				'ingreso_fecha' => $this->input->post('ingreso_fecha'),
				'ingreso_hora' => $this->input->post('ingreso_hora'),
            );
            
            $ingreso_id = $this->Ingreso_model->add_ingreso($params);
            redirect('ingreso/index');
        }
        else
        {
			$this->load->model('Unidad_model');
			$data['all_unidad'] = $this->Unidad_model->get_all_unidad();

			$this->load->model('Pedido_model');
			$data['all_pedido'] = $this->Pedido_model->get_all_pedido();

			$this->load->model('Usuario_model');
			$data['all_usuario'] = $this->Usuario_model->get_all_usuario();
            
            $data['_view'] = 'ingreso/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a ingreso
     */
    function edit($ingreso_id)
    {   
        // check if the ingreso exists before trying to edit it
        $data['ingreso'] = $this->Ingreso_model->get_ingreso($ingreso_id);
        
        if(isset($data['ingreso']['ingreso_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'estado_id' => $this->input->post('estado_id'),
					'unidad_id' => $this->input->post('unidad_id'),
					'pedido_id' => $this->input->post('pedido_id'),
					'usuario_id' => $this->input->post('usuario_id'),
					'ingreso_numdoc' => $this->input->post('ingreso_numdoc'),
					'ingreso_fecha' => $this->input->post('ingreso_fecha'),
					'ingreso_hora' => $this->input->post('ingreso_hora'),
                );

                $this->Ingreso_model->update_ingreso($ingreso_id,$params);            
                redirect('ingreso/index');
            }
            else
            {
				$this->load->model('Estado_model');
				$data['all_estado'] = $this->Estado_model->get_all_estado_tipo1();

				$this->load->model('Unidad_model');
				$data['all_unidad'] = $this->Unidad_model->get_all_unidad();

				$this->load->model('Pedido_model');
				$data['all_pedido'] = $this->Pedido_model->get_all_pedido();

				$this->load->model('Usuario_model');
				$data['all_usuario'] = $this->Usuario_model->get_all_usuario();

                $data['_view'] = 'ingreso/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The ingreso you are trying to edit does not exist.');
    } 

    /*
     * Deleting ingreso
     */
    function remove($ingreso_id)
    {
        $ingreso = $this->Ingreso_model->get_ingreso($ingreso_id);

        // check if the ingreso exists before trying to delete it
        if(isset($ingreso['ingreso_id']))
        {
            $this->Ingreso_model->delete_ingreso($ingreso_id);
            redirect('ingreso/index');
        }
        else
            show_error('The ingreso you are trying to delete does not exist.');
    }
    
}
