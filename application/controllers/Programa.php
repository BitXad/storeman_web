<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Programa extends CI_Controller{
    private $session_data = "";
    function __construct()
    {
        parent::__construct();
        $this->load->model('Programa_model');
        $this->load->model('Unidad_model');
        $this->load->model('Estado_model');
        $this->load->helper('numeros');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    } 
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of programa
     */
    function index()
    {
        if($this->acceso(12)){
            $data['programa'] = $this->Programa_model->get_all_programas();
            /*$data['estado'] = $this->Estado_model->get_all_estado();
            $data['unidad'] = $this->Unidad_model->get_all_unidad();*/

            $data['_view'] = 'programa/index';
            $this->load->view('layouts/main',$data);
        }
    }
    function kardex()
    {
        if($this->acceso(12)){
            $data['all_programa'] = $this->Programa_model->get_all_programa();
            $data['programa'] = $this->Programa_model->get_all_programa();
            $data['estado'] = $this->Estado_model->get_all_estado();
            $data['unidad'] = $this->Unidad_model->get_all_unidad();

            $data['_view'] = 'programa/kardex';
            $this->load->view('layouts/main',$data);
        }
    }

     function buscar()
    {
        if ($this->input->is_ajax_request()) {
        $gestion = $this->session_data['gestion_id'];
        $parametro = $this->input->post('parametro');   
        $programa_id = $this->input->post('programa_id');   
        $fecha_desde = $this->input->post('fecha_desde');   
        $fecha_hasta = $this->input->post('fecha_hasta');   
        
        
            $datos = $this->Programa_model->get_articulop($parametro,$programa_id,$fecha_desde,$fecha_hasta,$gestion);            
        if ($datos!=null){   
            echo json_encode($datos);
        }
        else show_404();
    }
    else
    {                 
        show_404();
    }              
}

    /*
     * Adding a new programa
     */
    function add()
    {
        if($this->acceso(12)){
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                    'unidad_id' => $this->input->post('unidad_id'),
                    'estado_id' => $this->input->post('estado_id'),
                    'programa_nombre' => $this->input->post('programa_nombre'),
                    'programa_codigo' => $this->input->post('programa_codigo'),
                    'programa_descripcion' => $this->input->post('programa_descripcion'),
                );

                $programa_id = $this->Programa_model->add_programa($params);
                redirect('programa/index');
            }
            else
            {
                $this->load->model('Unidad_model');
                $data['all_unidad'] = $this->Unidad_model->get_all_unidad();

                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();

                $data['_view'] = 'programa/add';
                $this->load->view('layouts/main',$data);
            }
        }
    }  

    /*
     * Editing a programa
     */
    function edit($programa_id)
    {
        if($this->acceso(12)){
            // check if the programa exists before trying to edit it
            $data['programa'] = $this->Programa_model->get_programa($programa_id);

            if(isset($data['programa']['programa_id']))
            {
                if(isset($_POST) && count($_POST) > 0)     
                {   
                    $params = array(
                                            'unidad_id' => $this->input->post('unidad_id'),
                                            'estado_id' => $this->input->post('estado_id'),
                                            'programa_nombre' => $this->input->post('programa_nombre'),
                                            'programa_codigo' => $this->input->post('programa_codigo'),
                                            'programa_descripcion' => $this->input->post('programa_descripcion'),
                    );

                    $this->Programa_model->update_programa($programa_id,$params);            
                    redirect('programa/index');
                }
                else
                {
                                    $this->load->model('Unidad_model');
                                    $data['all_unidad'] = $this->Unidad_model->get_all_unidad();

                                    $this->load->model('Estado_model');
                                    $data['all_estado'] = $this->Estado_model->get_all_estado_tipo1();

                    $data['_view'] = 'programa/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The programa you are trying to edit does not exist.');
        }
    } 
    /*
     * Inactivar programa
     */
    function inactivar($programa_id)
    {
        $programa = $this->Programa_model->get_programa($programa_id);

        // check if the programa exists before trying to delete it
        if(isset($programa['programa_id']))
        {
            $this->Programa_model->inactivar_programa($programa_id);
            redirect('programa/index');
        }
        else
            show_error('The programa you are trying to delete does not exist.');
    }

    function activar($programa_id)
    {
        $programa = $this->Programa_model->get_programa($programa_id);

        // check if the programa exists before trying to delete it
        if(isset($programa['programa_id']))
        {
            $this->Programa_model->activar_programa($programa_id);
            redirect('programa/index');
        }
        else
            show_error('The programa you are trying to delete does not exist.');
    }

    /*
     * Deleting programa
     */
    function remove($programa_id)
    {
        $programa = $this->Programa_model->get_programa($programa_id);

        // check if the programa exists before trying to delete it
        if(isset($programa['programa_id']))
        {
            $this->Programa_model->delete_programa($programa_id);
            redirect('programa/index');
        }
        else
            show_error('The programa you are trying to delete does not exist.');
    }
    function programainv()
    {
        if($this->acceso(12)){
            $this->load->model('Institucion_model');
            $data['institucion'] = $this->Institucion_model->get_all_institucion();
            
            $data['gestion_nombre'] = $this->session_data['gestion_nombre'];
            $gestion_id = $this->session_data['gestion_id'];
            $this->load->model('Gestion_model');
            $gestion = $this->Gestion_model->get_gestion($gestion_id);
            $data['gestion_inicio']  = '1999-01-01';//$gestion['gestion_inicio'];
            $data['gestion_id']  = $gestion['gestion_id'];
            
            $data['all_programa'] = $this->Programa_model->get_all_programa();
            $data['gestion'] = $this->Gestion_model->get_all_gestion();
            
            $data['_view'] = 'programa/programainv';
            $this->load->view('layouts/main',$data);
        }
    }
    
    function inventariobuscar()
    {
        if($this->input->is_ajax_request()){
            $fecha_hasta = $this->input->post('fecha_hasta');
            $programa_id = $this->input->post('programa_id');
            $gestion_inicio = $this->input->post('gestion_inicio');
            $gestion_id = $this->input->post('gestion_id');
            $datos = $this->Programa_model->get_programainventario($gestion_id, $programa_id, $fecha_hasta);
            if($datos!=null){
                echo json_encode($datos);
            }
            else echo json_encode("no");
        }
        else
        {                 
            show_404();
        }
    }
    
    //Generar el inventario inicial
    function inventarioinicial()
    {
        if($this->input->is_ajax_request()){
            
            $fecha_hasta = $this->input->post('fecha_hasta');
            $programa_id = $this->input->post('programa_id');
            $gestion_inicio = $this->input->post('gestion_inicio');
            $gestion_id = $this->input->post('gestion_id');
            
            $gestion_id2 = $this->input->post('gestion_descripcion');
            $gestion_fecha = $this->input->post('gestion_fecha');
            
            $datos = $this->Programa_model->get_programainventario($gestion_id, $programa_id, $fecha_hasta);
            
            
            $proveedor_id = 0;
            $usuario_id = $this->session_data['usuario_id'];
            $ingreso_numdoc = 0;
            $ingreso_fecha = "'".$gestion_fecha."'";
            $ingreso_hora = "time(now())";
            $estado_id = 1;
            $gestion_id = $gestion_id2;
            $ingreso_total = 0;
            $ingreso_fecha_ing = "date(now())";
            $factura_id = 0;
            $pedido_id = 0;
            $responsable_id = $usuario_id;
            //$programa_id
            
            //Registrar ingreso
            $sql = "insert into ingreso(proveedor_id,usuario_id,ingreso_numdoc,ingreso_fecha,
                    ingreso_hora,estado_id,gestion_id,ingreso_total,ingreso_fecha_ing,
                    factura_id,pedido_id,responsable_id,programa_id) value(".
                    $proveedor_id.",".$usuario_id.",".$ingreso_numdoc.",".$ingreso_fecha.",".
                    $ingreso_hora.",".$estado_id.",".$gestion_id.",".$ingreso_total.",".$ingreso_fecha_ing.",".
                    $factura_id.",".$pedido_id.",".$responsable_id.",".$programa_id.")";
            

            $ingreso_id = $this->Programa_model->ejecutar($sql);
            
                
            //Registrar detalle de ingreso
            foreach($datos as $d){
                
                $articulo_id = $d["articulo_id"];
                //$ingreso_id 
                $detalleing_cantidad = $d["saldos"];
                $detalleing_precio = $d["precio_unitario"];
                $detalleing_total =  $d["precio_unitario"]." * ". $d["saldos"];;
                $detalleing_salida = 0;
                $detalleing_saldo = 0;
                $factura_numero = 0;
                
                if ($detalleing_cantidad >0){
                    $sql = "insert into detalle_ingreso(articulo_id,ingreso_id,detalleing_cantidad,
                            detalleing_precio,detalleing_total,detalleing_salida,
                            detalleing_saldo,factura_numero) value(".
                            $articulo_id.",".$ingreso_id.",".$detalleing_cantidad.",".$detalleing_precio.",".
                            $detalleing_total.",".$detalleing_salida.",".$detalleing_saldo.",".$factura_numero.")";


                    $this->Programa_model->ejecutar($sql);
                }
            }
            
            //Actualizar ingreso
            
            
        }
        else
        {                 
            show_404();
        }
    }
    
    
    function convertiraliteral()
    {
        if($this->input->is_ajax_request()){
            $numero = $this->input->post('numero');
            $datos = num_to_letras($numero);
            if($datos!=null){
                echo json_encode($datos);
            }
            else echo json_encode("no");
        }
        else
        {                 
            show_404();
        }
    }
    function obtenercodigo()
    {
        if($this->input->is_ajax_request()){
            $programa_id = $this->input->post('programa_id');
            $este_codigo = $this->Programa_model->get_programa($programa_id);
            $datos = $este_codigo['programa_codigo'];
            if($datos!=null){
                echo json_encode($datos);
            }
            else echo json_encode("no");
        }
        else
        {                 
            show_404();
        }
    }
    function consumidos()
    {
        if($this->acceso(12)){
            $this->load->model('Institucion_model');
            $data['institucion'] = $this->Institucion_model->get_all_institucion();
            
            $data['gestion_nombre'] = $this->session_data['gestion_nombre'];
            $gestion_id = $this->session_data['gestion_id'];
            $this->load->model('Gestion_model');
            $gestion = $this->Gestion_model->get_gestion($gestion_id);
            $data['gestion_inicio']  = '1999-01-01';//$gestion['gestion_inicio'];
            $data['gestion_id']  = $gestion['gestion_id'];
            
            $data['all_programa'] = $this->Programa_model->get_all_programa();

            $data['_view'] = 'programa/consumidos';
            $this->load->view('layouts/main',$data);
        }
    }

    function consumidobuscar()
    {
        if($this->input->is_ajax_request()){
            $fecha_hasta = $this->input->post('fecha_hasta');
            $programa_id = $this->input->post('programa_id');
            $gestion_inicio = $this->input->post('gestion_inicio');
            $gestion_id = $this->input->post('gestion_id');
            $datos = $this->Programa_model->get_consumidos($gestion_id, $programa_id, $fecha_hasta);
            if($datos!=null){
                echo json_encode($datos);
            }
            else echo json_encode("no");
        }
        else
        {                 
            show_404();
        }
    }
}
