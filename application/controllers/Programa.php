<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Programa extends CI_Controller{
    private $session_data = "";
    function __construct()
    {
        parent::__construct();
        $this->load->model('Programa_model');
        $this->load->model('Unidad_model');
        $this->load->model('Estado_model');
        $this->load->helper('numeros');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    } 
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of programa
     */
    function index()
    {
        if($this->acceso(12)){
            $data['programa'] = $this->Programa_model->get_all_programas();
            /*$data['estado'] = $this->Estado_model->get_all_estado();
            $data['unidad'] = $this->Unidad_model->get_all_unidad();*/

            $data['_view'] = 'programa/index';
            $this->load->view('layouts/main',$data);
        }
    }
    function kardex()
    {
        if($this->acceso(12)){
            $data['all_programa'] = $this->Programa_model->get_all_programa();
            $data['programa'] = $this->Programa_model->get_all_programa();
            $data['estado'] = $this->Estado_model->get_all_estado();
            $data['unidad'] = $this->Unidad_model->get_all_unidad();

            $data['_view'] = 'programa/kardex';
            $this->load->view('layouts/main',$data);
        }
    }

     function buscar()
    {
        if ($this->input->is_ajax_request()) {
        
        $parametro = $this->input->post('parametro');   
        $programa_id = $this->input->post('programa_id');   
        $fecha_desde = $this->input->post('fecha_desde');   
        $fecha_hasta = $this->input->post('fecha_hasta');   
        
        
            $datos = $this->Programa_model->get_articulop($parametro,$programa_id,$fecha_desde,$fecha_hasta);            
        if ($datos!=null){   
            echo json_encode($datos);
        }
        else show_404();
    }
    else
    {                 
        show_404();
    }              
}

    /*
     * Adding a new programa
     */
    function add()
    {
        if($this->acceso(12)){
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                    'unidad_id' => $this->input->post('unidad_id'),
                    'estado_id' => $this->input->post('estado_id'),
                    'programa_nombre' => $this->input->post('programa_nombre'),
                    'programa_codigo' => $this->input->post('programa_codigo'),
                    'programa_descripcion' => $this->input->post('programa_descripcion'),
                );

                $programa_id = $this->Programa_model->add_programa($params);
                redirect('programa/index');
            }
            else
            {
                $this->load->model('Unidad_model');
                $data['all_unidad'] = $this->Unidad_model->get_all_unidad();

                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();

                $data['_view'] = 'programa/add';
                $this->load->view('layouts/main',$data);
            }
        }
    }  

    /*
     * Editing a programa
     */
    function edit($programa_id)
    {
        if($this->acceso(12)){
            // check if the programa exists before trying to edit it
            $data['programa'] = $this->Programa_model->get_programa($programa_id);

            if(isset($data['programa']['programa_id']))
            {
                if(isset($_POST) && count($_POST) > 0)     
                {   
                    $params = array(
                                            'unidad_id' => $this->input->post('unidad_id'),
                                            'estado_id' => $this->input->post('estado_id'),
                                            'programa_nombre' => $this->input->post('programa_nombre'),
                                            'programa_codigo' => $this->input->post('programa_codigo'),
                                            'programa_descripcion' => $this->input->post('programa_descripcion'),
                    );

                    $this->Programa_model->update_programa($programa_id,$params);            
                    redirect('programa/index');
                }
                else
                {
                                    $this->load->model('Unidad_model');
                                    $data['all_unidad'] = $this->Unidad_model->get_all_unidad();

                                    $this->load->model('Estado_model');
                                    $data['all_estado'] = $this->Estado_model->get_all_estado_tipo1();

                    $data['_view'] = 'programa/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The programa you are trying to edit does not exist.');
        }
    } 
    /*
     * Inactivar programa
     */
    function inactivar($programa_id)
    {
        $programa = $this->Programa_model->get_programa($programa_id);

        // check if the programa exists before trying to delete it
        if(isset($programa['programa_id']))
        {
            $this->Programa_model->inactivar_programa($programa_id);
            redirect('programa/index');
        }
        else
            show_error('The programa you are trying to delete does not exist.');
    }

    function activar($programa_id)
    {
        $programa = $this->Programa_model->get_programa($programa_id);

        // check if the programa exists before trying to delete it
        if(isset($programa['programa_id']))
        {
            $this->Programa_model->activar_programa($programa_id);
            redirect('programa/index');
        }
        else
            show_error('The programa you are trying to delete does not exist.');
    }

    /*
     * Deleting programa
     */
    function remove($programa_id)
    {
        $programa = $this->Programa_model->get_programa($programa_id);

        // check if the programa exists before trying to delete it
        if(isset($programa['programa_id']))
        {
            $this->Programa_model->delete_programa($programa_id);
            redirect('programa/index');
        }
        else
            show_error('The programa you are trying to delete does not exist.');
    }
    function programainv()
    {
        if($this->acceso(12)){
            $this->load->model('Institucion_model');
            $data['institucion'] = $this->Institucion_model->get_all_institucion();
            
            $data['gestion_nombre'] = $this->session_data['gestion_nombre'];
            $gestion_id = $this->session_data['gestion_id'];
            $this->load->model('Gestion_model');
            $gestion = $this->Gestion_model->get_gestion($gestion_id);
            $data['gestion_inicio']  = $gestion['gestion_inicio'];
            $data['gestion_id']  = $gestion['gestion_id'];
            
            $data['all_programa'] = $this->Programa_model->get_all_programa();

            $data['_view'] = 'programa/programainv';
            $this->load->view('layouts/main',$data);
        }
    }
    function inventariobuscar()
    {
        if($this->input->is_ajax_request()){
            $fecha_hasta = $this->input->post('fecha_hasta');
            $programa_id = $this->input->post('programa_id');
            $gestion_inicio = $this->input->post('gestion_inicio');
            $gestion_id = $this->input->post('gestion_id');
            $datos = $this->Programa_model->get_programainventario($gestion_id, $programa_id, $fecha_hasta);
            if($datos!=null){
                echo json_encode($datos);
            }
            else echo json_encode("no");
        }
        else
        {                 
            show_404();
        }
    }
    function convertiraliteral()
    {
        if($this->input->is_ajax_request()){
            $numero = $this->input->post('numero');
            $datos = num_to_letras($numero);
            if($datos!=null){
                echo json_encode($datos);
            }
            else echo json_encode("no");
        }
        else
        {                 
            show_404();
        }
    }
}
